zend_extension = xdebug.so

xdebug.var_display_max_depth = 5
xdebug.var_display_max_data = 250
xdebug.var_display_max_children = 5
xdebug.max_nesting_level = 250
xdebug.cli_color = 1
xdebug.show_exception_trace = 0
xdebug.dump_globals = 1
xdebug.dump_once = 1
xdebug.show_local_vars = 1

xdebug.remote_autostart = 1            ; If 0, CLI debug will not work. If 1, always try to start a remote debugging session and connect to a client, regardless of the GET/POST/COOKIE variable being present.
xdebug.remote_enable = 1               ; trigger: cookie:XDEBUG_SESSION_START=PHPSTORM
xdebug.remote_host = '172.17.0.1'      ; Host where the debug client is running, you can either use a host name, IP address, or 'unix:///path/to/sock' for a Unix domain socket. This setting is ignored if xdebug.remote_connect_back is enabled.
xdebug.remote_connect_back = 0         ; If enabled, the xdebug.remote_host setting is ignored and Xdebug will try to connect to the client that made the HTTP request. This setting does not apply for debugging through the CLI
xdebug.remote_port = 9000
xdebug.remote_handler = dbgp
xdebug.remote_mode = req

xdebug.profiler_enable = 0
xdebug.profiler_enable_trigger = 1     ; trigger: cookie:XDEBUG_PROFILE => 1
xdebug.profiler_output_dir = '/tmp'
xdebug.profiler_output_name = "%H.profiler"

xdebug.auto_trace = 0
xdebug.trace_enable_trigger = 1        ; trigger: cookie:XDEBUG_TRACE => 1
xdebug.trace_options = 0
xdebug.trace_format = 2
xdebug.trace_output_dir = '/tmp'
xdebug.trace_output_name = "%H.trace"
xdebug.collect_params = 4
xdebug.collect_return = 1

xdebug.idekey = "PHPSTORM"
